FROM nvidia/cuda:11.8.0-devel-ubuntu20.04

WORKDIR /app

ENV DEBIAN_FRONTEND=noninteractive

# PM2 & necessary packages
RUN apt-get update && apt-get install -y curl wget git lsof procps\
    && curl -sL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g pm2 

# Installing Miniconda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && chmod 700 Miniconda3-latest-Linux-x86_64.sh \
    && ./Miniconda3-latest-Linux-x86_64.sh -b \
    && rm Miniconda3-latest-Linux-x86_64.sh

ENV PATH="/root/miniconda3/bin:${PATH}"
RUN conda create -n venv python=3.10.13 -y \
    && echo "source activate venv" > ~/.bashrc
ENV PATH="/root/miniconda3/envs/venv/bin:${PATH}"

# Update and install system packages
RUN apt-get update && apt-get upgrade -y && apt-get full-upgrade -y \
    && apt-get install -y --no-install-recommends build-essential python3-dev python3-pip apt-utils \
    vim sudo ffmpeg libsm6 libxext6 python3-tk git-lfs unzip \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Python packages
COPY image_server/requirements.txt /app/requirements.txt
RUN pip install --upgrade pip setuptools \
    && pip install -r /app/requirements.txt \
    && pip install huggingface_hub[hf_transfer] \
    && rm -rf /root/.cache/pip/*

COPY image_server /app/image_server
COPY ecosystem_image.config.js /app/ecosystem_image.config.js

ENV HF_HUB_ENABLE_HF_TRANSFER=1

USER root
ENV DEVICE=0

RUN mkdir /app/cache
ENV HF_HOME=/app/cache
ENV HF_HUB_CACHE=/app/cache/hub

RUN chmod +x /app/image_server/entrypoint.sh 
RUN chmod +x /app/image_server/setup.sh 

CMD ["sh", "-c", "cd /app/image_server && ./setup.sh && ./entrypoint.sh"]