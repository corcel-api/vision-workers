name: Build, deploy & test - GCP

on:
  push:
  pull_request:

jobs:
  build-all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode SSH keys
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      
      - name: Wait for Instance to be Ready
        run: |
          until gcloud compute ssh a100-cuda118 --zone us-central1-b --command "echo 'Instance is up'"; do
            echo 'Waiting for the instance to be ready...'
            sleep 10
          done
          echo 'Instance is ready!'

      - name: Clear remote directory
        run: gcloud compute ssh a100-cuda118 --zone us-central1-b --command "rm -rf /home/runner/*"

      - name: Copy updated repository to remote server
        run: gcloud compute scp --recurse /home/runner/work/vision-workers/vision-workers a100-cuda118:/home/runner/vision-workers --zone us-central1-b
      
      - name: Run script on remote server
        run: gcloud compute ssh a100-cuda118 --zone us-central1-b --command "export PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}; export BUILD_ID=${{ github.sha }}; docker login --username=${{ secrets.DOCKER_USER }} --password=${{ secrets.DOCKER_PASSW }}; cd /home/runner/vision-workers && chmod +x ./build-docker-ci-remote.sh && bash ./build-docker-ci-remote.sh"
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          BUILD_ID: ${{ github.sha }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSW: ${{ secrets.DOCKER_PASSW }}

  gcp-deploy-orchestrator:
    needs: build-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Start orchestrator server
        run: gcloud compute ssh a100-cuda118 --zone us-central1-b --command "docker run -d --gpus all --runtime=nvidia -p ${{ secrets.PORT_ORCH }}:${{ secrets.PORT_ORCH }} -p ${{ secrets.PORT_LLM }}:${{ secrets.PORT_LLM }} corcelio/cicd:orchestrator-${{ github.sha }}"
        env:
          PORT_ORCH: ${{ secrets.PORT_ORCH }}  
          PORT_LLM: ${{ secrets.PORT_LLM }}  

      - name: Wait for Orchestrator to be ready
        run: |
          gcloud compute ssh a100-cuda118 --zone us-central1-b --command "\
          until curl -f localhost:${{ secrets.PORT_ORCH }}/docs; do \
            echo 'Waiting for the Orchestrator to be ready...'; \
            sleep 10; \
          done; \
          echo 'Orchestrator is ready!'"
        env:
          PORT_ORCH: ${{ secrets.PORT_ORCH }}
        timeout-minutes: 15

  gcp-test-orchestrator-image:
    needs: gcp-deploy-orchestrator
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Copy json data for query
        run: gcloud compute scp --recurse /home/runner/work/vision-workers/vision-workers/ci-tests/orch-image-txt2img.json a100-cuda118:/home/runner/orch-image-txt2img.json --zone us-central1-b
      
      - name: Test gcp Orchestrator - Image
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: timeout
          timeout_minutes: 15
          command: |
            gcloud compute ssh a100-cuda118 --zone us-central1-b --command "\
              curl -f -X POST localhost:${{ secrets.PORT_ORCH }}/check-result \
              -H 'Content-Type: application/json' \
              --data-binary @/home/runner/orch-image-txt2img.json"
        env:
          PORT_ORCH: ${{ secrets.PORT_ORCH }}
    
  gcp-test-orchestrator-avatar:
    needs: gcp-test-orchestrator-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Copy json data to remote
        run: gcloud compute scp --recurse /home/runner/work/vision-workers/vision-workers/ci-tests/avatar-test.json a100-cuda118:/home/runner/avatar-test.json --zone us-central1-b
      
      - name: Test gcp Orchestrator - Image - Avatar
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: timeout
          timeout_minutes: 15
          command: |
            gcloud compute ssh a100-cuda118 --zone us-central1-b --command "\
              curl -f -X POST localhost:${{ secrets.PORT_LLM }}/avatar \
              -H 'Content-Type: application/json' \
              --data-binary @/home/runner/avatar-test.json"
        env:
          PORT_LLM: ${{ secrets.PORT_LLM }}

  gcp-stop-test-orch:
    needs: gcp-test-orchestrator-avatar
    runs-on: ubuntu-latest
    steps:
      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Stop docker containers
        run: |
          gcloud compute ssh a100-cuda118 --zone us-central1-b --command "docker stop \$(docker ps -q)"

  gcp-deploy-llm:
    needs: gcp-stop-test-orch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Start LLM server
        run: gcloud compute ssh a100-cuda118 --zone us-central1-b --command "docker run -d --gpus all --runtime=nvidia -p ${{ secrets.PORT_LLM }}:${{ secrets.PORT_LLM }} corcelio/cicd:llm-server-${{ github.sha }}"
        env:
          PORT_LLM: ${{ secrets.PORT_LLM }}  

      - name: Wait for LLM server to be ready
        run: |
          gcloud compute ssh a100-cuda118 --zone us-central1-b --command "\
          until curl -f localhost:${{ secrets.PORT_LLM }}/docs; do \
            echo 'Waiting for the LLM server to be ready...'; \
            sleep 10; \
          done; \
          echo 'LLM server is ready!'"
        env:
          PORT_LLM: ${{ secrets.PORT_LLM }}
        timeout-minutes: 15
  
  gcp-test-llm:
    needs: gcp-deploy-llm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      
      - name: Copy json data for query
        run: gcloud compute scp --recurse /home/runner/work/vision-workers/vision-workers/ci-tests/load_model_small.json a100-cuda118:/home/runner/load_model_small.json --zone us-central1-b
      
      - name: Test gcp LLM server - load small model
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: timeout
          timeout_minutes: 15
          command: |
            gcloud compute ssh a100-cuda118 --zone us-central1-b --command "\
              curl -f -X POST localhost:${{ secrets.PORT_LLM }}/load_model \
              -H 'Content-Type: application/json' \
              --data-binary @/home/runner/load_model_small.json"
        env:
          PORT_LLM: ${{ secrets.PORT_LLM }}
      
      - name: Copy json data for query
        run: gcloud compute scp --recurse /home/runner/work/vision-workers/vision-workers/ci-tests/query_llm.json a100-cuda118:/home/runner/query_llm.json --zone us-central1-b

      - name: Test gcp LLM server - query model
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: timeout
          timeout_minutes: 15
          command: |
            gcloud compute ssh a100-cuda118 --zone us-central1-b --command "\
              curl -f -X POST localhost:${{ secrets.PORT_LLM }}/generate_text \
              -H 'Content-Type: application/json' \
              --data-binary @/home/runner/query_llm.json"
        env:
          PORT_LLM: ${{ secrets.PORT_LLM }}
      
  gcp-stop-test-llm:
    needs: gcp-test-llm
    runs-on: ubuntu-latest
    steps:
      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Stop docker containers
        run: |
          gcloud compute ssh a100-cuda118 --zone us-central1-b --command "docker stop \$(docker ps -q)"

  gcp-deploy-image:
    needs: gcp-stop-test-llm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Start Image server
        run: gcloud compute ssh a100-cuda118 --zone us-central1-b --command "docker run -d --gpus all --runtime=nvidia -p ${{ secrets.PORT_LLM }}:${{ secrets.PORT_LLM }} corcelio/cicd:image-server-${{ github.sha }}"
        env:
          PORT_LLM: ${{ secrets.PORT_LLM }}  

      - name: Wait for Image server to be ready
        run: |
          gcloud compute ssh a100-cuda118 --zone us-central1-b --command "\
          until curl -f localhost:${{ secrets.PORT_LLM }}/docs; do \
            echo 'Waiting for the Image server to be ready...'; \
            sleep 10; \
          done; \
          echo 'Image server is ready!'"
        env:
          PORT_LLM: ${{ secrets.PORT_LLM }}
        timeout-minutes: 15

  gcp-test-image:
    needs: gcp-deploy-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Copy json data for query
        run: gcloud compute scp --recurse /home/runner/work/vision-workers/vision-workers/ci-tests/image-server-test.json a100-cuda118:/home/runner/image-server-test.json --zone us-central1-b
      
      - name: Test gcp Image server
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: timeout
          timeout_minutes: 15
          command: |
            gcloud compute ssh a100-cuda118 --zone us-central1-b --command "\
              curl -f -X POST localhost:${{ secrets.PORT_LLM }}/txt2img \
              -H 'Content-Type: application/json' \
              --data-binary @/home/runner/image-server-test.json"
        env:
          PORT_LLM: ${{ secrets.PORT_LLM }}
  
  gcp-stop-test-image:
    needs: gcp-test-image
    runs-on: ubuntu-latest
    steps:
      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Stop docker containers
        run: |
          gcloud compute ssh a100-cuda118 --zone us-central1-b --command "docker stop \$(docker ps -q)"