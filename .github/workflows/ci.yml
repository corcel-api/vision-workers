name: Vision Workers CICD

on: [push, pull_request]

jobs:
  build-all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Decode SSH keys
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Clear remote directory
        run: gcloud compute ssh a100-cuda118 --zone us-central1-f --command "rm -rf ~/*"
      - name: Copy updated repository to remote server
        run: gcloud compute scp --recurse /home/runner/work/vision-workers/vision-workers a100-cuda118:~/ --zone us-central1-f
      - name: Run script on remote server
        run: gcloud compute ssh a100-cuda118 --zone us-central1-f --command "export PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}; export BUILD_ID=${{ github.run_id }}; docker login --username=${{ secrets.DOCKER_USER }} --password=${{ secrets.DOCKER_PASSW }}; cd /home/runner/vision-workers && bash ./build-docker-ci-remote.sh"
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          BUILD_ID: ${{ github.run_id }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSW: ${{ secrets.DOCKER_PASSW }}
  
  deploy-gcp-orchestrator:
    needs: build-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      
      - name: Clear remote directory
        run: gcloud compute ssh l4-cuda121-vision-workers-cd --zone us-central1-a --command "docker run -d --gpus all --runtime=nvidia -p ${{ secrets.PORT_ORCH }}:${{ secrets.PORT_ORCH }} -p ${{ secrets.PORT_LLM }}:${{ secrets.PORT_LLM }} corcelio/cicd:orchestrator-${{ github.run_id }}"
        env:
          PORT_ORCH: ${{ secrets.PORT_ORCH }}  
          PORT_LLM: ${{ secrets.PORT_LLM }}  

      - name: Wait for Orchestrator to be ready
        run: |
          timeout=1000 # Timeout in seconds
          interval=10 # Interval in seconds
          attempts=$((timeout / interval))
          count=0
          until curl -f http://localhost:${{ secrets.PORT_ORCH }}/docs
          do
            echo 'Waiting for Orchestrator to be ready...'
            sleep $interval
            ((count++))
            if [[ "$count" -eq "$attempts" ]]; then
              echo "Timeout reached, exiting..."
              exit 1
            fi
          done
        env:
          PORT_ORCH: ${{ secrets.PORT_ORCH }}

  test-gcp-orchestrator-llm:
    needs: deploy-gcp-orchestrator
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Test Runpod Orchestrator - LLM
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: timeout
          timeout_minutes: 15
          command: |
            gcloud compute ssh l4-cuda121-vision-workers-cd --zone us-central1-a --command "\
              curl -f -X POST localhost:${{ secrets.PORT_ORCH }}/check-result \
              -H 'Content-Type: application/json' \
              -d '${{ secrets.TEST_ORCH_LLM_QUERY }}'"
        env:
          TEST_ORCH_LLM_QUERY: ${{ secrets.TEST_ORCH_LLM_QUERY }}
          PORT_ORCH: ${{ secrets.PORT_ORCH }}
    
  test-gcp-orchestrator-image:
    needs: test-gcp-orchestrator-llm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Decode SSH keys
        run: |
          mkdir /home/runner/.ssh
          echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
          echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 644 ~/.ssh/google_compute_engine.pub
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Copy updated repository to remote server
        run: gcloud compute scp --recurse /home/runner/work/vision-workers/vision-workers/ci-tests/orch-image-txt2img.json l4-cuda121-vision-workers-cd:~/orch-image-txt2img.json --zone us-central1-a
      - name: Test Runpod Orchestrator - Image
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: timeout
          timeout_minutes: 15
          command: |
            gcloud compute ssh l4-cuda121-vision-workers-cd --zone us-central1-a --command "\
              curl -f -X POST localhost:${{ secrets.PORT_ORCH }}/check-result \
              -H 'Content-Type: application/json' \
              --data-binary @~/orch-image-txt2img.json"
        env:
          PORT_ORCH: ${{ secrets.PORT_ORCH }}

  test-gcp-orchestrator-avatar:
      needs: test-gcp-orchestrator-image
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Decode SSH keys
          run: |
            mkdir /home/runner/.ssh
            echo "$SSH_PRIVATE_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine
            echo "$SSH_PUBLIC_KEY" | base64 --decode > /home/runner/.ssh/google_compute_engine.pub
            chmod 600 ~/.ssh/google_compute_engine
            chmod 644 ~/.ssh/google_compute_engine.pub
          env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        - name: Set up Cloud SDK
          uses: google-github-actions/setup-gcloud@v0.3.0
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}
            service_account_key: ${{ secrets.GCP_SA_KEY }}
            export_default_credentials: true
        - name: Copy updated repository to remote server
          run: gcloud compute scp --recurse /home/runner/work/vision-workers/vision-workers/ci-tests/orch-image-txt2img.json l4-cuda121-vision-workers-cd:~/orch-image-txt2img.json --zone us-central1-a
        - name: Test Runpod Orchestrator - Image
          uses: nick-fields/retry@v3
          with:
            max_attempts: 3
            retry_on: timeout
            timeout_minutes: 15
            command: |
              gcloud compute ssh l4-cuda121-vision-workers-cd --zone us-central1-a --command "\
                curl -f -X POST localhost:${{ secrets.PORT_LLM }}/avatar \
                -H 'Content-Type: application/json' \
                --data-binary @~/orch-image-txt2img.json"
          env:
            PORT_LLM: ${{ secrets.PORT_LLM }}